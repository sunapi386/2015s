#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
CS486 Optional Course Project Proposal
\end_layout

\begin_layout Author
Jason Sun
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
This a project proposal to explore applications of machine learning into
 analysing the large quantity of data generated from each Dota game.
 I think this is an appropriate project for machine learning because it
 hass a large quantity of data available, and the dataa is changing with
 every release.
 And there are 15M unique players a month, with international contests for
 these games.
 So there is an interest in those games, like myself, to improve their chances
 of winning matches.
 
\end_layout

\begin_layout Section
Game background
\end_layout

\begin_layout Standard
There are 102 heroes, and each hero has 101 matchup statistics against other
 heroes.
 There are two opposing teams, each of 5 heroes.
 And there are few game modes that are available, each can be potentially
 analysed.
 Complete descriptions on http://dota2.gamepedia.com/Game_modes.
 
\end_layout

\begin_layout Itemize
All Pick 
\end_layout

\begin_layout Itemize
Single Draft 
\end_layout

\begin_layout Itemize
Random Draft 
\end_layout

\begin_layout Itemize
All Random 
\end_layout

\begin_layout Itemize
Captains Mode 
\end_layout

\begin_layout Itemize
Captains Draft 
\end_layout

\begin_layout Itemize
Least Played 
\end_layout

\begin_layout Itemize
Limited Heroes 
\end_layout

\begin_layout Itemize
Ability Draft 
\end_layout

\begin_layout Itemize
1v1 Solo Mid 
\end_layout

\begin_layout Itemize
All Random Deathmatch
\end_layout

\begin_layout Standard
There are many modes, some of them more used professionally, some of them
 less serious (for example, all random).
 In professional gaming world, quite frequently seen is Captain's Mode,
 a captain for the team has to to pick and ban heroes, taking turns and
 in sequence.
 
\end_layout

\begin_layout Standard
I'll focus on one mode for now in the sake of brievity.
 But it remains true that in general that the concepts we'll explore in
 this project remains applicable to the other modes.
 Concepts such as 
\begin_inset Quotes eld
\end_inset

what heroes should I pick for my team, knowing the other team has picked
 those heroes?
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Section
My previous project
\end_layout

\begin_layout Standard
I have previously tried to make use of the public API that Valve (company
 that built the game) and do analysis.
 The source code repository is here github.com/sunapi386/dotabuff-ripper.
 In this codebase, 
\end_layout

\begin_layout Enumerate
I attempt to scrape win rate data (which is summarized by a website called
 Dotabuff using an unknown and persumably proprietary algorithm).
 Usual win rate of hero 
\begin_inset Formula $A$
\end_inset

 against hero 
\begin_inset Formula $B$
\end_inset

 is in the range of 
\begin_inset Formula $50\pm10\%$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Loaded the scraped hero win rate data into a graph database and modeled
 each hero as a node and each edge as a win rate.
 Although probably not necessary, I was sold on the idea that a graph can
 model this data well and it would be fast to develop since I didn't need
 to write graph algorithms.
 
\end_layout

\begin_layout Enumerate
Made a simple command-line interface that queried the database: given that
 you have a set of heroes chosen, return a sorted set of heroes that your
 team plays the weakest against..
 This was calculated by a very basic algorithm, which was: for each enemy
 hero chosen, I added their win rate against all the other heroes and returned
 a sorted list by decreasing winrate.
 
\end_layout

\begin_layout Enumerate
Finally, host this on the web so others can use it and potentially levy
 some donations for it.
 This last step was never done because I didn't think my algorithm was very
 sophisticated, and probably didn't perform much better than a player having
 choosing based on their experienced guess.
\end_layout

\begin_layout Section
Proposed project
\end_layout

\begin_layout Standard
Instead of scraping the win rate data from Dotabuff, I wanted to scrape
 actual game matching data results and calculate my own win rate.
 My previous project was done in 2013 and I had a very basic understanding
 of data analaysis and algorithms.
 I think after two more years I can do predictions better.
 Some of the ideas I thought about exploring into and applying to analyse
 game match data were:
\end_layout

\begin_layout Itemize
Hidden Markov Models.
 As far as I know, this improved speech recognition industry by quite a
 bit because it was able to guess a new word based on the learned likelyhood
 of that word following a word just recognized.
 So in that sense we can train a HMM on the win rate dataset.
 I'm not sure how this is different from using neural networks.
\end_layout

\begin_layout Itemize
Neural Networks.
 This form is probably most appropriate, it is quite popular in machine
 learning, and has good results in pattern recognition.
 For example, we can create a training set based on the heroes that one
 team picked against another team and train which team was the winner, thus
 learning what are good team compositions against another team.
\end_layout

\begin_layout Standard
In terms of options A/B/C/D for the project, I think my proposal is mostly
 option B and some of C, which is to implement and experiment several AI
 techinques to solve this problem, and potentially develop a new AI techinque.
 Then evaluate theoretically and/or empirically the performance by taking
 it through actual matches.
 I think I'll start with option B as I'm not aware of a lot of potential
 ways to solve this problem and would like to try some existing techinques
 before calling it a day and creating one from scratch (which is presumably
 harder).
\end_layout

\end_body
\end_document
